import { useRouter } from 'expo-router';
import { useEffect, useState } from 'react';
import {
    Alert,
    FlatList,
    ImageBackground,
    SafeAreaView,
    StyleSheet,
    Text,
    TouchableOpacity,
    View
} from 'react-native';
import api from './services/api'; // Importando nossa API

const BACKGROUND_IMAGE = require('../assets/fundo-site.png');

const PremioItem = ({ item, onComprar }) => (
Â  <View style={styles.premioContainer}>
Â  Â  <View>
Â  Â  Â  <Text style={styles.premioNome}>{item.nome}</Text>
Â  Â  Â  <Text style={styles.premioPreco}>ðŸ’° {item.preco}</Text>
Â  Â  </View>
Â  Â  <TouchableOpacity 
Â  Â  Â  style={styles.comprarButton} 
Â  Â  Â  onPress={() => onComprar(item)}
Â  Â  >
Â  Â  Â  <Text style={styles.comprarButtonText}>Comprar</Text>
Â  Â  </TouchableOpacity>
Â  </View>
);

export default function PremiosScreen() {
Â  const router = useRouter();
Â  const [premios, setPremios] = useState([]);
Â  const [loading, setLoading] = useState(true);

Â  // 1. Buscar os prÃªmios da API
Â  useEffect(() => {
Â  Â  const fetchPremios = async () => {
Â  Â  Â  try {
Â  Â  Â  Â  // GET /api/premio/listar
Â  Â  Â  Â  const response = await api.get('/premio/listar');
Â  Â  Â  Â  setPremios(response.data);
Â  Â  Â  } catch (error) {
Â  Â  Â  Â  console.error("Erro ao buscar prÃªmios:", error);
Â  Â  Â  Â  Alert.alert("Erro", "NÃ£o foi possÃ­vel carregar a loja de prÃªmios.");
Â  Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  Â  }
Â  Â  };
Â  Â  fetchPremios();
Â  }, []);

Â  // 2. LÃ³gica para comprar
Â  const handleComprar = async (premio) => {
Â  Â  // TODO: VocÃª precisa do ID do personagem logado!
Â  Â  // Estou usando '1' como exemplo.
Â  Â  const personagemId = 1; 

Â  Â  const payload = {
Â  Â  Â  personagemId: personagemId,
Â  Â  Â  premioId: premio.id
Â  Â  Â  // O status provavelmente Ã© definido no backend
Â  Â  };

Â  Â  try {
Â  Â  Â  // POST /api/tabelapremio/criar
Â  Â  Â  await api.post('/tabelapremio/criar', payload);
Â  Â  Â  Alert.alert("Sucesso!", `VocÃª comprou: ${premio.nome}!`);
Â  Â  Â  // TODO: Atualizar o ouro do personagem na tela (contexto global)
Â  Â  } catch (error) {
Â  Â  Â  console.error("Erro ao comprar prÃªmio:", error.response?.data || error);
Â  Â  Â  Alert.alert("Erro", "NÃ£o foi possÃ­vel realizar a compra.");
Â  Â  }
Â  };

Â  return (
Â  Â  <SafeAreaView style={styles.safeArea}>
Â  Â  Â  <ImageBackground 
Â  Â  Â  Â  source={BACKGROUND_IMAGE} 
Â  Â  Â  Â  style={styles.container}
Â  Â  Â  Â  resizeMode="cover"
Â  Â  Â  >
Â  Â  Â  Â  <View style={styles.header}>
Â  Â  Â  Â  Â  <TouchableOpacity style={styles.backButton} onPress={() => router.back()}>
Â  Â  Â  Â  Â  Â  <Text style={styles.backButtonText}>{'<'}</Text>
Â  Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  Â  <Text style={styles.title}>LOJA DE PRÃŠMIOS</Text>
Â  Â  Â  Â  </View>
Â  Â  Â  Â  
Â  Â  Â  Â  {loading ? (
Â  Â  Â  Â  Â  <Text style={styles.loadingText}>Carregando prÃªmios...</Text>
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <FlatList
Â  Â  Â  Â  Â  Â  data={premios}
Â  Â  Â  Â  Â  Â  keyExtractor={(item) => item.id.toString()}
Â  Â  Â  Â  Â  Â  renderItem={({ item }) => (
Â  Â  Â  Â  Â  Â  Â  <PremioItem item={item} onComprar={handleComprar} />
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  contentContainerStyle={styles.listContainer}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  )}
Â  Â  Â  </ImageBackground>
Â  Â  </SafeAreaView>
Â  );
}

const styles = StyleSheet.create({
Â  safeArea: { flex: 1, backgroundColor: '#FF8C00' },
Â  container: { flex: 1 },
Â  header: {
Â  Â  width: '100%',
Â  Â  paddingVertical: 20,
Â  Â  paddingTop: 50,
Â  Â  alignItems: 'center',
Â  Â  position: 'relative',
Â  },
Â  title: {
Â  Â  fontSize: 24,
Â  Â  fontWeight: 'bold',
Â  Â  color: 'white',
Â  Â  textShadowColor: 'black',
Â  Â  textShadowOffset: { width: 2, height: 2 },
Â  Â  textShadowRadius: 2,
Â  },
Â  backButton: {
Â  Â  position: 'absolute',
Â  Â  top: 50, 
Â  Â  left: 20,
Â  Â  zIndex: 10,
Â  },
Â  backButtonText: {
Â  Â  fontSize: 30,
Â  Â  color: 'white',
Â  Â  fontWeight: 'bold',
Â  },
Â  loadingText: {
Â  Â  color: 'white',
Â  Â  fontSize: 18,
Â  Â  textAlign: 'center',
Â  Â  marginTop: 50,
Â  },
Â  listContainer: {
Â  Â  paddingHorizontal: 20,
Â  Â  paddingBottom: 50,
Â  },
Â  premioContainer: {
Â  Â  backgroundColor: 'rgba(255, 255, 255, 0.9)',
Â  Â  padding: 15,
Â  Â  marginVertical: 8,
Â  Â  borderRadius: 10,
Â  Â  borderWidth: 2,
Â  Â  borderColor: 'black',
Â  Â  flexDirection: 'row',
Â  Â  justifyContent: 'space-between',
Â  Â  alignItems: 'center',
Â  },
Â  premioNome: {
Â  Â  fontSize: 18,
Â  Â  fontWeight: 'bold',
Â  Â  color: 'black',
Â  },
Â  premioPreco: {
Â  Â  fontSize: 16,
Â  Â  color: '#A88A00',
Â  Â  fontWeight: 'bold',
Â  Â  marginTop: 5,
Â  },
Â  comprarButton: {
Â  Â  backgroundColor: '#38B000',
Â  Â  paddingVertical: 8,
Â  Â  paddingHorizontal: 15,
Â  Â  borderRadius: 5,
Â  Â  borderWidth: 2,
Â  Â  borderColor: 'black',
Â  },
Â  comprarButtonText: {
Â  Â  color: 'white',
Â  Â  fontWeight: 'bold',
Â  Â  fontSize: 16,
Â  },
});